{"version":3,"sources":["Event.js","EventList.js","Alert.js","CitySearch.js","NumberOfEvents.js","config.js","api.js","Login.jsx","EventGenre.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["Event","state","showDetails","handleShowDetails","setState","formatStartTime","time","props","event","start","dateTime","formattedStartTime","moment","format","className","formatEndTime","end","formattedEndTime","this","summary","location","onClick","description","organizer","email","Component","EventList","events","map","id","Alert","getStyle","color","style","text","InfoAlert","ErrorAlert","WarningAlert","CitySearch","query","suggestions","showSuggestions","undefined","handleInputChanged","value","target","locations","filter","toUpperCase","indexOf","length","infoText","handleItemClicked","suggestion","updateEvents","type","onChange","onFocus","display","NumberOfEvents","eventNumber","errorText","margin","config","GET_AUTH","GET_TOKEN","GET_EVENTS","GOOGLE_API","LOCAL_HOST","extractLocations","Set","getEvents","a","NProgress","localStorage","getItem","setItem","JSON","stringify","lastEvents","console","log","storedEvents","done","parse","token","removeQuery","url","Config","axios","get","result","data","window","history","pushState","pathname","newurl","protocol","host","checkToken","accessToken","fetch","then","res","json","catch","error","Login","align","src","alt","href","rel","EventGenre","useState","setData","useEffect","getData","genre","split","includes","name","COLORS","ResponsiveContainer","height","PieChart","Legend","verticalAlign","iconSize","iconType","Pie","cx","cy","labelLine","outerRadius","dataKey","label","percent","toFixed","entry","index","Cell","fill","App","eventCount","navigator","onLine","warningText","currentLocation","numberOfEvents","filteredEvents","slice","componentDidMount","validToken","tokenCheck","searchParams","URLSearchParams","search","code","mounted","number","city","shift","handleShowCharts","showCharts","Navbar","variant","expand","fixed","Brand","Toggle","aria-controls","Collapse","Nav","Item","Link","ScatterChart","top","right","bottom","left","CartesianGrid","strokeDasharray","XAxis","YAxis","allowDecimals","Tooltip","Scatter","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","headers","response","contentType","status","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration","atatus","install"],"mappings":"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","file":"static/js/main.4e316011.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport moment from 'moment';\n\nclass Event extends Component {\n    state = {\n        showDetails: false\n    };\n\n    // toggle button function\n    handleShowDetails = () => {\n        if(this.state.showDetails === false){\n            this.setState({ showDetails: true});\n        } else {\n            this.setState({ showDetails: false})\n        }\n    };\n\n    formatStartTime = () => {\n        const time = this.props.event.start.dateTime;\n        const formattedStartTime = moment(time).format('dddd, MMMM, Do YYYY, h:MM a');\n        return <span className='start-dateTime'>{`${formattedStartTime}`}</span>\n    }\n\n    formatEndTime = () => {\n        const time = this.props.event.end.dateTime;\n        const formattedEndTime = moment(time).format('dddd, MMMM, Do YYYY, h:MM a');\n        return <span className='start-dateTime'>{`${formattedEndTime}`}</span>\n    }\n\n    render() {\n        const showDetails = this.state.showDetails;\n        // passed event from Event.test.js as prop event={mockData}, no need to import it again in this component\n        const {event} = this.props;\n\n        return(\n            <div className='Event'>\n                <div className='event-collapsed'>\n                    <h3 className='event-name'>{event.summary}</h3>\n                    <p className='event-location'>{event.location}</p>\n                    {!showDetails && (\n                        <button className='details-btn' onClick={this.handleShowDetails}>\n                            See More\n                        </button>\n                    )}\n                    {showDetails && (\n                        <button className='details-btn' onClick={this.handleShowDetails}>\n                            See Less\n                        </button>\n                    )}\n                </div>\n                \n                {showDetails && (\n                    <div className='event-expanded'>\n                        <p className='event-start'><span className='time-label'>Starts @ </span>{this.formatStartTime()}</p>\n                        <p className='event-end'><span className='time-label'>Ends @ </span>{this.formatEndTime()}</p>\n                        <p className='event-description'>{event.description}</p>\n                        <p className='event-organizer'>Get in touch with us about this event at: <span className='org-email'>{event.organizer.email}</span></p>\n\n                    </div>\n                )}\n\n            </div>\n        )\n    }\n};\n\nexport default Event;\n","import React, { Component } from 'react';\nimport Event from './Event';\n\nclass EventList extends Component {\n    render(){\n        const { events } = this.props;\n        return(\n            <ul className='EventList'>\n                {events.map(event => \n                    <li key={event.id}>\n                        <Event event={event}/>\n                    </li>\n                )}\n            </ul>\n        );\n    }\n}\n\nexport default EventList;","import React, { Component } from 'react';\n\nclass Alert extends Component {\n    constructor(props) {\n        super(props);\n        this.color = null;\n    }\n\n    getStyle = () => {\n        return {\n            color: this.color,\n        };\n    }\n\n    render() {\n        return(\n            <div className='Alert'>\n                <p style={this.getStyle()}>{this.props.text}</p>\n            </div>\n        );\n    }\n}\n\nclass InfoAlert extends Alert {\n    constructor(props) {\n        super(props);\n        this.color = '#7dd8ff';\n    }\n}\n\nclass ErrorAlert extends Alert {\n    constructor(props) {\n        super(props);\n        this.color = '#ff4343';\n    }\n}\n\n// no use for this right now, created for later implementation, maybe for offline warning use?\nclass WarningAlert extends Alert {\n    constructor(props) {\n        super(props);\n        this.color = 'orange';\n    }\n}\n\nexport {InfoAlert, ErrorAlert, WarningAlert};\n\n","import React, { Component } from 'react';\nimport {InfoAlert} from './Alert';\n\nclass CitySearch extends Component {\n\n  state = {\n    query: '',\n    suggestions: [],\n    showSuggestions: undefined\n  }\n\n  handleInputChanged = (event) => {\n    const value = event.target.value;\n    this.setState({showSuggestions: true});\n    // using this.props.location because we're passing it from App component later\n    const suggestions = this.props.locations.filter((location) => {\n      return location.toUpperCase().indexOf(value.toUpperCase()) > -1;\n    });\n    if (suggestions.length === 0) {\n      this.setState({\n        query: value,\n        infoText: `Looks like we don't have any events in that city, try another!`\n      });\n    } else {\n      return this.setState({\n        query:value,\n        suggestions,\n        // showSuggestions: false,\n        infoText: ''\n      });\n    }\n  }\n\n  handleItemClicked = (suggestion) => {\n    this.setState({\n      query: suggestion,\n      showSuggestions: false\n    });\n    this.props.updateEvents(suggestion);\n  }\n\n  render() {\n    return (\n      <div className='CitySearch'>\n        <InfoAlert text={this.state.infoText}/>\n\n        <input \n        type='text' \n        className='city' \n        value={this.state.query} \n        onChange={this.handleInputChanged}\n        onFocus={() => { this.setState({ showSuggestions: true})}}\n        />\n\n{/* if showSuggestions is true, list is visable, style won't have display: none, so list won't become visible */}\n        <ul className='suggestions' style={this.state.showSuggestions ? {}: {display: 'none'}}>\n          {this.state.suggestions.map((suggestion) => (\n            <li \n            key={suggestion}\n            onClick={() => this.handleItemClicked(suggestion)}\n            >\n              {suggestion}\n            </li>\n          ))}\n          <li onClick={() => this.handleItemClicked('all')}>\n            <b>See all cities</b>\n          </li>\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default CitySearch;","import React, {Component} from 'react';\nimport {ErrorAlert} from './Alert';\n\nclass NumberOfEvents extends Component {\n\n    state = {\n        // default number of events\n        eventNumber: 12,\n    };\n\n    handleInputChanged = (event) => {\n        const value = event.target.value;\n        this.props.updateEvents(null, value);\n        if (value < 1 ){\n            this.setState({\n                eventNumber: value,\n                errorText: 'Please choose at least one event to view.'\n            });\n        } else {\n            return this.setState({\n                eventNumber: value,\n                errorText: ''\n            });\n        } \n    }\n\n\n    render() {\n        return(\n            <div className='numberOfEvents'>\n                <ErrorAlert text={this.state.errorText} style={{margin: 0}}/>\n\n                <label className='eventNumberLabel'>Number of events/page:</label>\n                <input\n                type='number'\n                id='eventNumber'\n                className='eventNumber'\n                value={this.state.eventNumber}\n                onChange={this.handleInputChanged}\n                />\n\n            </div>\n        )\n    }\n}\n\nexport default NumberOfEvents;","const config = {\n\n    // GET_EVENTS: 'https://xixfiq7och.execute-api.ca-central-1.amazonaws.com/dev/api/get-events/',\n    // GET_TOKEN:'https://xixfiq7och.execute-api.ca-central-1.amazonaws.com/dev/api/token/',\n    // GET_AUTH:'https://xixfiq7och.execute-api.ca-central-1.amazonaws.com/dev/api/get-auth-url',\n        // GOOGLE_API: `https://www.googleapis.com/oauth2/v1/tokeninfo?`,\n        // LOCAL_HOST: 'http://localhost:3000/'\n    \n\n    // GET_AUTH: 'https://ndtbfpup03.execute-api.ca-central-1.amazonaws.com/dev/api/get-auth-url',\n    // GET_TOKEN: 'https://ndtbfpup03.execute-api.ca-central-1.amazonaws.com/dev/api/token/',\n    // GET_EVENTS: 'https://ndtbfpup03.execute-api.ca-central-1.amazonaws.com/dev/api/get-events/',\n    // GOOGLE_API: `https://www.googleapis.com/oauth2/v1/tokeninfo?`,\n    // LOCAL_HOST: 'http://localhost:8080/'\n\n    GET_AUTH: 'https://gq6zqys431.execute-api.us-east-1.amazonaws.com/dev/api/get-auth-url',\n    GET_TOKEN: 'https://gq6zqys431.execute-api.us-east-1.amazonaws.com/dev/api/token/',\n    GET_EVENTS: 'https://gq6zqys431.execute-api.us-east-1.amazonaws.com/dev/api/get-events/',\n    GOOGLE_API: `https://www.googleapis.com/oauth2/v1/tokeninfo?`,\n    LOCAL_HOST: 'http://localhost:8080/'\n}\n\n\nexport default config;","import { mockData } from './mock-data';\nimport axios from 'axios';\nimport NProgress from 'nprogress';\nimport Config from './config';\nimport lastEvents from './lastEvents.json';\n\nfunction setTest () {\n    const locationsX = [\"Santiago, Santiago Metropolitan Region, Chile\",\"California, USA\",\"Bangkok, Thailand\",\"Berlin, Germany\",\"Cape Town, South Africa\",\"New York, NY, USA\",\"Mumbai, Maharashtra, India\",\"London, UK\",\"Amsterdam, Netherlands\",\"Dubai - United Arab Emirates\",\"Toronto, ON, Canada\",\"Tokyo, Japan\",\"Nairobi, Kenya\",\"Sydney NSW, Australia\",\"Moscow, Russia\"];\n  localStorage.setItem('lastEvents', JSON.stringify(lastEvents));\n  localStorage.setItem('locations', JSON.stringify(locationsX));\n}\n\n\nexport const extractLocations = (events) => {\n  var extractLocations = events.map((event) => event.location);\n  var locations = [...new Set(extractLocations)];\n  return locations;\n};\n\nexport const getEvents = async () => {\n  NProgress.start();\n\n  if (!localStorage.getItem('lastEvents')) {\n    setTest();\n  }\n  // local host will only show mockData, all other endpoints (gh-pages) will show full api\n  // if (window.location.href.startsWith('http://localhost')) {\n  //   NProgress.done();\n  //   return mockData;\n  // }\n\n  // offline ability to load old data\n  // if (!navigator.onLine && !window.location.href.startsWith('http://localhost')) {\n  //   const storedEvents = localStorage.getItem('lastEvents');\n  //   const storedLocations = localStorage.getItem('locations');\n  //   NProgress.done();\n\n  //   return {\n  //     events: JSON.parse(storedEvents).events,\n  //     locations: JSON.parse(storedLocations)\n  //   };\n  // }\n\n  // if (!navigator.onLine) {\n    console.log(\"offline!\")\n    const storedEvents = localStorage.getItem(\"lastEvents\");\n    NProgress.done();\n    return JSON.parse(storedEvents).events;\n  // }\n\n  const token = await getAccessToken();\n\n  if (token) {\n    removeQuery();\n    const url = Config.GET_EVENTS + token;\n    const result = await axios.get(url);\n    if (result.data) {\n      var locations = extractLocations(result.data.events);\n      localStorage.setItem('lastEvents', JSON.stringify(result.data));\n      localStorage.setItem('locations', JSON.stringify(locations));\n    }\n    NProgress.done();\n    return result.data.events;\n  }\n};\n\nconst removeQuery = () => {\n  if (window.history.pushState && window.location.pathname) {\n    var newurl =\n      window.location.protocol +\n      '//' +\n      window.location.host +\n      window.location.pathname;\n    window.history.pushState('', '', newurl);\n  } else {\n    newurl = window.location.protocol + '//' + window.location.host;\n    window.history.pushState('', '', newurl);\n  }\n};\n\nexport const getAccessToken = async () => {\n  const accessToken = localStorage.getItem('access_token');\n  const tokenCheck = accessToken && (await checkToken(accessToken));\n\n  if (!accessToken || tokenCheck.error) {\n    await localStorage.removeItem('access_token');\n    const searchParams = new URLSearchParams(window.location.search);\n    const code = await searchParams.get('code');\n    if (!code) {\n      const results = await axios.get(Config.GET_AUTH);\n      const { authUrl } = results.data;\n      return (window.location.href = authUrl);\n    }\n    return code && getToken(code);\n  }\n  return accessToken;\n}\n\nexport const checkToken = async (accessToken) => {\n  const result = await fetch(\n    `${Config.GOOGLE_API}access_token=${accessToken}`\n  )\n    .then((res) => res.json())\n    .catch((error) => error.json());\n\n  return result;\n}\n\nconst getToken = async (code) => {\n  removeQuery();\n  const encodeCode = encodeURIComponent(code);\n  const { access_token } = await fetch(\n    Config.GET_TOKEN + encodeCode\n  )\n    .then((res) => {\n      return res.json();\n    })\n    .catch((error) => error);\n\n  access_token && localStorage.setItem('access_token', access_token);\n\n  return access_token;\n};\n\n\n\n","import React from 'react';\nimport Config from './config'\n\nfunction Login() {\n    return (\n        <div className='App'>\n            <h1>Welcome to the Meet App</h1>\n            <h4>\n                Log in to see upcoming events around the world for full-stack developers\n            </h4>\n            <div className='button_cont' align='center'>\n                <div className='google-btn'>\n                    <div className='google-icon-wrapper'>\n                        <img\n                        className='google-icon'\n                        src='https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg'\n                        alt='Google sing-in'\n                        />\n                    </div>\n                    <a\n                    href={Config.GET_AUTH}\n                    rel='nofollow noopener'\n                    className='btn-text'\n                    >\n                        <b>Sign in with Google</b>\n                    </a>\n                </div>\n            </div>\n            <a\n            href='https://glenzy.github.io/meet/privacy.html'\n            rel='nofollow noopener'\n            >\n                Privacy Policy\n            </a>\n        </div>\n    );\n}\n\nexport default Login;","import React, { useEffect, useState } from 'react';\nimport { PieChart, Pie, Cell, ResponsiveContainer, Legend } from 'recharts';\n\nconst EventGenre = ({events}) => {\n    const [data, setData] = useState([]);\n\n    useEffect(() => { setData(() => getData()); }, [events]);\n\n    const getData = () => {\n        const genres = ['React', 'JavaScript', 'Node', 'jQuery', 'AngularJS'];\n        const data = genres.map((genre) => {\n            const value = events.filter(({summary}) => \n            summary.split(' ').includes(genre)\n            ).length;\n            return {name: genre, value};\n        });\n        return data;\n    };\n\n    const COLORS = ['#EB9021', '#EB2821', '#EA21A2', '#A721EB', '#1f7eea']; \n\n    return(\n        <ResponsiveContainer height={400}>\n            <PieChart height={400}>\n                <Legend align='center' verticalAlign='top' iconSize='15' iconType='circle' />\n                <Pie\n                    data={data}\n                    cx='50%'\n                    cy='50%'\n                    labelLine={false}\n                    outerRadius={80}\n                    dataKey='value'\n                    label={({ percent }) =>\n                        `${(percent * 100).toFixed(0)}%`\n                    }\n                >\n                    {data.map((entry, index) => (\n                        <Cell\n                        key={`cell-${index}`}\n                        fill={COLORS[index % COLORS.length]}\n                        name={entry.name}\n                        />\n                    ))}\n                </Pie>\n            </PieChart>\n        </ResponsiveContainer>\n    )\n}\n\nexport default EventGenre;\n","import React, {Component} from 'react';\nimport {Nav, Navbar} from 'react-bootstrap';\nimport './App.css';\nimport EventList from './EventList';\nimport CitySearch from './CitySearch';\nimport NumberOfEvents from './NumberOfEvents';\nimport { extractLocations, getEvents, checkToken } from './api';\nimport './nprogress.css';\nimport Login from './Login';\nimport { WarningAlert } from './Alert';\nimport {\n  ScatterChart,\n  Scatter,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  ResponsiveContainer\n} from 'recharts';\nimport EventGenre from './EventGenre';\n\n\nclass App extends Component {\n  constructor() {\n    super()\n    this.state = {\n      events: [],\n      locations: [],\n      numberOfEvents: 12,\n      currentLocation: 'all',\n      tokenCheck: false,\n      warningText: '',\n      showCharts: true\n    }\n  }\n\n  updateEvents = (location, eventCount) => {\n\n    // offline warning\n    if(!navigator.onLine) {\n      this.setState({\n        warningText: 'You are offline and using old search results, the events loaded may not be the most up to date!'\n      });\n    } else {\n      this.setState({\n        warningText: ''\n      })\n    }\n\n    const {currentLocation, numberOfEvents} = this.state;\n    if (location) {\n      getEvents().then((events) => {\n        const locationEvents = \n          location === 'all'\n            ? events\n            : events.filter((event) => event.location === location);\n        const filteredEvents = locationEvents.slice(0, numberOfEvents);\n        this.setState({\n          events: filteredEvents,\n          currentLocation: location\n        });\n      });\n    } else {\n      getEvents().then((events) => {\n        const locationEvents = \n          currentLocation === 'all'\n            ? events\n            : events.filter((event) => event.location === currentLocation);\n        const filteredEvents = locationEvents.slice(0, eventCount);\n        this.setState({\n          events: filteredEvents,\n          numberOfEvents: eventCount\n        });\n      });\n    }\n  }\n\n componentDidMount =  async () => {\n    console.log(\"COMPONENT DID MOUNT -- APP JS\")\n    // google verification PDF task\n    const accessToken = localStorage.getItem('access_token');\n    const validToken = accessToken !== null \n      ? await checkToken(accessToken)\n      : false;\n    this.setState({ tokenCheck: validToken });\n    if(validToken === true) \n      this.updateEvents();\n      const searchParams = new URLSearchParams(window.location.search);\n      const code = searchParams.get('code');\n    this.mounted = true;\n    if (code && this.mounted === true && validToken === false){\n      this.setState({ tokenCheck: true });\n      this.updateEvents()\n    }\n\n\n    this.mounted = true;\n    getEvents().then((events) => {\n      if(this.mounted) {\n      this.setState({ events, locations: extractLocations(events) }, () => console.log(this.state));\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  getData = () => {\n    const {locations, events} = this.state;\n    const data = locations.map((location) => {\n      const number = events.filter((event) => event.location === location).length\n      const city = location.split(',').shift()\n      return {city, number};\n    })\n    return data;\n  }\n\n  handleShowCharts = () => {\n    if(this.state.showCharts === false){\n      this.setState({showCharts: true});\n    } else {\n      this.setState({showCharts: false})\n    }\n  };\n\n\n  render() {\n    let {tokenCheck} = this.state;\n    const {locations, numberOfEvents, events} = this.state;\n    const showCharts = this.state.showCharts;\n\n    return {tokenCheck} === false ? (\n      <div className='App'>\n        <Login />\n      </div>\n    ) : (\n      <div className='App'>\n        <Navbar variant='dark'  expand='md' fixed='top' className='color-nav'>\n          <Navbar.Brand className='brand' href='https://ksflynn007.github.io/meet-app/'>\n            Code Club\n          </Navbar.Brand>\n          <Navbar.Toggle aria-controls='basic-navbar-nav'/>\n          <Navbar.Collapse>\n            <Nav>\n              <Nav.Item>\n                <Nav.Link className='justify-content-end' href='https://ksflynn007.github.io/meet-app/privacy-policy.html'>Privacy Policy</Nav.Link>\n              </Nav.Item>\n              <Nav.Item className='header-welcome'>Welcome to the Code Club, please select a city below to find an event:</Nav.Item>\n            </Nav>\n          </Navbar.Collapse>\n        </Navbar>\n\n        <WarningAlert text={this.state.warningText}/>\n\n        <CitySearch \n          locations={locations} \n          updateEvents={this.updateEvents}\n          />\n        <NumberOfEvents \n          numberOfEvents={numberOfEvents}\n          updateEvents={this.updateEvents}\n          />\n        \n        <div className='data-vis-wrapper'>\n          <div className='charts-collapsed'>\n          <p>Your search results at a glance:</p>\n          {!showCharts && (\n            <button className='charts-btn' onClick={this.handleShowCharts}>\n              See charts\n            </button>\n          )}\n          {showCharts && (\n            <button className='charts-btn' onClick={this.handleShowCharts}>\n              Hide charts\n            </button>\n          )}\n          </div>\n\n          {showCharts && (\n            <div className='charts-expanded'>\n            <EventGenre events={events} />\n\n          <ResponsiveContainer height={400}>\n          <ScatterChart margin={{ top: 20, right: 20, bottom: 20, left: 20 }}>\n            <CartesianGrid strokeDasharray='3 3' />\n\n            <XAxis type='category' dataKey='city' name='City'/>\n            <YAxis type='number' dataKey='number' name='Number of Events' allowDecimals={false}/>\n\n            <Tooltip/>\n            <Scatter data={this.getData()} fill='#ea21a2' />\n          </ScatterChart>\n          </ResponsiveContainer>\n\n            </div>\n          )}\n        </div>\n\n\n        <EventList events={events}/>\n      </div>\n    )\n  };\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\nimport * as atatus from 'atatus-spa';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\n// serviceWorkerRegistration.unregister();\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\natatus.config('b9237718df5e45c39793ba2fadca9808').install();\n"],"sourceRoot":""}